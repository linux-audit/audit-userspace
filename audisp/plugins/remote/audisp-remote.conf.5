.TH AUDISP-REMOTE.CONF "5" "Aug 2018" "Red Hat" "System Administration Utilities"
.SH NAME
audisp-remote.conf \- the audisp-remote configuration file
.SH DESCRIPTION
\fBaudisp-remote.conf\fP is the file that controls the configuration of the audit remote logging subsystem. The options that are available are as follows:

.TP
.I remote_server
This is a one word character string that is the remote server hostname or address that this plugin will send log information to. This can be the numeric address or a resolvable hostname.
.TP
.I port
This option is an unsigned integer that indicates what port to connect to on the remote machine.
.TP
.I local_port
This option is an unsigned integer that indicates what local port to
connect from on the local machine.  If unspecified (the default) or
set to the word
.I any
then any available unprivileged port is used. This is a security mechanism to prevent untrusted user space apps from injecting events into the audit daemon. You should set it to an unused port < 1024 to ensure that only privileged users can bind to that port. Then also set the tcp_client_ports in the aggregating auditd.conf file to match the ports that clients are sending from.
.TP
.I transport
This parameter tells the remote logging app how to send events to the remote system. The valid options are
.IR TCP ", and " KRB5 ".
If set to
.IR TCP ,
the remote logging app will just make a normal clear text connection to the remote system. If its set to
.IR KRB5 ",
then Kerberos 5 will be used for authentication and encryption. The default value is TCP.
.TP
.I mode
This parameter tells the remote logging app what strategy to use getting records to the remote system. Valid values are
.IR immediate ", and " forward " .
If set to
.IR immediate ,
the remote logging app will attempt to send events immediately after getting them.
.I forward
means that it will store the events to disk and then attempt to send the records. If the connection cannot be made, it will queue records until it can connect to the remote system. The depth of the queue is controlled by the
.I queue_depth
option.
.TP
.I queue_file
Path of a file used for the event queue if
.I mode
is set to \fIforward\fP.  The default is \fB/var/spool/audit/remote.log\fP.
.TP
.I queue_depth
This option is an unsigned integer that determines how many records can be buffered to disk or in memory before considering it to be a failure sending. This parameter affects the
.I forward
mode of the
.I mode
option and internal queueing for temporary network outages. The default depth is 2048.
.TP
.I format
This parameter tells the remote logging app what data format will be
used for the messages sent over the network.  The default is
.I managed
which adds some overhead to ensure each message is properly handled on
the remote end, and to receive status messages from the remote server.
If
.I ascii
is given instead, each message is a simple ASCII text line with no
overhead at all. The
.I ascii
format is a very simplistic protocol. If there are any network problems, it
will cause audisp-remote to exit. Auditd may or may not restart it on next
event. If something more robust is needed, use the
.I managed
format. If
.I mode
is set to \fIforward\fP,
.I format
must be \fImanaged\fP.
.TP
.I network_retry_time
The time, in seconds, between retries when a network error is
detected.  Note that this pause applies starting after the second
attempt, so as to avoid unneeded delays if a reconnect is sufficient
to fix the problem.  The default is 1 second.
.TP
.I max_tries_per_record
The maximum number of times an attempt is made to deliver each
message.  The minimum value is one, as even a completely successful
delivery requires at least one try.  If too many attempts are made,
the network_failure_action action is performed.  The default is 3.
.TP
.I max_time_per_record
The maximum amount of time, in seconds, spent attempting to deliver
each message.  Note that both this and
.I max_tries_per_record
should be set, as each try may take a long time to time out.  The
default value is 5 seconds.  If too much time is used on a message,
the network_failure_action action is performed.
.TP
.I heartbeat_timeout
This parameter determines how often in seconds the client should send a heartbeat event to the remote server. This is used to let both the client and server know that each end is alive and has not terminated in a way that it did not shutdown the connection uncleanly. This value must be coordinated with the server's
.I tcp_client_max_idle
setting. The default value is 0 which disables sending a heartbeat.
.TP
.I network_failure_action
This parameter tells the system what action to take whenever there is an error
detected when sending audit events to the remote system. Valid values are
.IR ignore ", " syslog ", " exec ", " warn_once ", " suspend ", " single ", " halt ", and " stop .
If set to
.IR ignore ,
the remote logging app does nothing. If an event was sent, its dequeued.
.I Syslog
means that it will issue a warning to syslog. If an event was sent, its dequeued. This is the default.
.I exec
/path-to-script will execute the script. You cannot pass parameters to the script. If an event was sent, its dequeued.
.I warn_once_continue
is like syslog except that only one message is put in syslog until an event is successfully transferred.
.I warn_once
is like warn_once_continue except that the event is not dequeued.
.I Suspend
will cause the remote logging app to stop sending records to the remote system. The logging app will still be alive. If an event was sent, it is not dequeued. The
.I single
option will cause the remote logging app to put the computer system in single user mode. If an event was sent, it is not dequeued. The
.I stop
option will cause the remote logging app to exit, but leave other plugins running. If an event was sent, it is not dequeued. The
.I halt
option will cause the remote logging app to shutdown the computer system. If an event was sent, it is not dequeued. The default is to stop.
.TP
.I disk_low_action
Likewise, this parameter tells the system what action to take if the
remote end signals a disk low error.  The default is ignore.
.TP
.I disk_full_action
Likewise, this parameter tells the system what action to take if the
remote end signals a disk full error.  The default is warn_once.
.TP
.I disk_error_action
Likewise, this parameter tells the system what action to take if the
remote end signals a disk error.  The default is warn_once.
.TP
.I remote_ending_action
Likewise, this parameter tells the system what action to take if the
network connection is lost. This action has one additional option,
.I reconnect
which tells the remote plugin to attempt to reconnect to the server upon receipt of the next audit record. If an event was being sent when something triggered this action, it is not dequeued. If it is unsuccessful in reconnecting, the audit record could be lost. The default is to reconnect.
.TP
.I generic_error_action
Likewise, this parameter tells the system what action to take if the
remote end signals an error we don't recognize.  The default is to log
it to syslog.
.TP
.I generic_warning_action
Likewise, this parameter tells the system what action to take if the
remote end signals a warning we don't recognize.  The default is to
log it to syslog.
.TP
.I queue_error_action
Likewise, this parameter tells the system what action to take if there
is a problem working with a local record queue.  The default is stop.
.TP
.I overflow_action
This parameter tells the system what action to take if the
internal event queue overflows. Valid values are
.IR ignore ", " syslog ", " suspend ", " single ", and " halt " .
If set to
.IR ignore ,
the remote logging app does nothing.
.I Syslog
means that it will issue a warning to syslog.  This is the default.
.I Suspend
will cause the remote logging app to stop sending records to the remote system. The logging app will still be alive. The
.I single
option will cause the remote logging app to put the computer system in single user mode. The
.I halt
option will cause the remote logging app to shutdown the computer system.
.TP
.I startup_failure_action
This parameter tells the system what action to take whenever there is an error connecting to the remote system during startup. Typically, this is benign as the plugin's default behavior is to attempt reconnecting until it succeeds. But there may be times when you want to do something different. Valid values are
.IR ignore ", " syslog ", " exec ", " warn_once ", and " warn_once_continue " .
If set to
.IR ignore ,
the remote logging app does nothing.
.I Syslog
means that it will issue a warning to syslog.
.I exec
/path-to-script will execute the script. You cannot pass parameters to the script.
.I warn_once
is like syslog except that only one message is put in syslog until an event is successfully transferred.
.I warn_once_continue
is like warn_once except it ignores the problem. This is the default.
.TP
.I enable_krb5
This option is deprecated. Use the
.IR transport
option to enable Kerberos support. If this option follows the transport
configuration option, it will override the transport setting. This would
be the normal expected behavior for backwards compatibility. If set to
.IR yes ",
Kerberos 5 will be used for authentication and encryption.  Default is
.IR no ".  Note that encryption can only be used with managed connections,
not plain ASCII.
.TP
.I krb5_principal
If specified, This is the expected principal for the server.  The
client and server will use the specified principal to negotiate the
encryption.  The format for the
.I krb5_principal
is like somename/hostname, see the auditd.conf man page for
details.  If not specified, the krb5_client_name and remote_server values
are used.
.TP
.I krb5_client_name
This specifies the name portion of the client's own principal.  If
unspecified, the default is "auditd".  The remainder of the principal
will consist of the host's fully qualified domain name and the default
Kerberos realm, like this:
.I auditd/host14.example.com@EXAMPLE.COM
(assuming you gave "auditd" as the krb_client_name).  Note that the
client and server must have the same principal name and realm.
.TP
.I krb5_key_file
Location of the key for this client's principal.
Note that the key file must be owned by root and mode 0400.
The default is
.I /etc/audisp/audisp-remote.key


.SH "NOTES"
Specifying a local port may make it difficult to restart the audit
subsystem due to the previous connection being in a TIME_WAIT state,
if you're reconnecting to and from the same hosts and ports as before.

The network failure logic works as follows: The first attempt to
deliver normally "just works".  If it doesn't, a second attempt is
immediately made, perhaps after reconnecting to the server.  If
the second attempt also fails,
.I audispd-remote
pauses for the configured time and tries again.  It continues to pause
and retry until either too many attempts have been made or the allowed
time expires.  Note that these times govern the maximum amount of time
the remote server is allowed in order to reboot, if you want to
maintain logging across a reboot.

.SH "SEE ALSO"
.BR audispd (8),
.BR audisp-remote (8),
.BR auditd.conf (5).
.SH AUTHOR
Steve Grubb

