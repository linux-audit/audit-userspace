/* mips_n32_table.h --
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 */

_S(6000, "read")
_S(6001, "write")
_S(6002, "open")
_S(6003, "close")
_S(6004, "stat")
_S(6005, "fstat")
_S(6006, "lstat")
_S(6007, "poll")
_S(6008, "lseek")
_S(6009, "mmap")
_S(6010, "mprotect")
_S(6011, "munmap")
_S(6012, "brk")
_S(6013, "rt_sigaction")
_S(6014, "rt_sigprocmask")
_S(6015, "ioctl")
_S(6016, "pread64")
_S(6017, "pwrite64")
_S(6018, "readv")
_S(6019, "writev")
_S(6020, "access")
_S(6021, "pipe")
_S(6022, "_newselect")
_S(6023, "sched_yield")
_S(6024, "mremap")
_S(6025, "msync")
_S(6026, "mincore")
_S(6027, "madvise")
_S(6028, "shmget")
_S(6029, "shmat")
_S(6030, "shmctl")
_S(6031, "dup")
_S(6032, "dup2")
_S(6033, "pause")
_S(6034, "nanosleep")
_S(6035, "getitimer")
_S(6036, "setitimer")
_S(6037, "alarm")
_S(6038, "getpid")
_S(6039, "sendfile")
_S(6040, "socket")
_S(6041, "connect")
_S(6042, "accept")
_S(6043, "sendto")
_S(6044, "recvfrom")
_S(6045, "sendmsg")
_S(6046, "recvmsg")
_S(6047, "shutdown")
_S(6048, "bind")
_S(6049, "listen")
_S(6050, "getsockname")
_S(6051, "getpeername")
_S(6052, "socketpair")
_S(6053, "setsockopt")
_S(6054, "getsockopt")
_S(6055, "clone")
_S(6056, "fork")
_S(6057, "execve")
_S(6058, "exit")
_S(6059, "wait4")
_S(6060, "kill")
_S(6061, "uname")
_S(6062, "semget")
_S(6063, "semop")
_S(6064, "semctl")
_S(6065, "shmdt")
_S(6066, "msgget")
_S(6067, "msgsnd")
_S(6068, "msgrcv")
_S(6069, "msgctl")
_S(6070, "fcntl")
_S(6071, "flock")
_S(6072, "fsync")
_S(6073, "fdatasync")
_S(6074, "truncate")
_S(6075, "ftruncate")
_S(6076, "getdents")
_S(6077, "getcwd")
_S(6078, "chdir")
_S(6079, "fchdir")
_S(6080, "rename")
_S(6081, "mkdir")
_S(6082, "rmdir")
_S(6083, "creat")
_S(6084, "link")
_S(6085, "unlink")
_S(6086, "symlink")
_S(6087, "readlink")
_S(6088, "chmod")
_S(6089, "fchmod")
_S(6090, "chown")
_S(6091, "fchown")
_S(6092, "lchown")
_S(6093, "umask")
_S(6094, "gettimeofday")
_S(6095, "getrlimit")
_S(6096, "getrusage")
_S(6097, "sysinfo")
_S(6098, "times")
_S(6099, "ptrace")
_S(6100, "getuid")
_S(6101, "syslog")
_S(6102, "getgid")
_S(6103, "setuid")
_S(6104, "setgid")
_S(6105, "geteuid")
_S(6106, "getegid")
_S(6107, "setpgid")
_S(6108, "getppid")
_S(6109, "getpgrp")
_S(6110, "setsid")
_S(6111, "setreuid")
_S(6112, "setregid")
_S(6113, "getgroups")
_S(6114, "setgroups")
_S(6115, "setresuid")
_S(6116, "getresuid")
_S(6117, "setresgid")
_S(6118, "getresgid")
_S(6119, "getpgid")
_S(6120, "setfsuid")
_S(6121, "setfsgid")
_S(6122, "getsid")
_S(6123, "capget")
_S(6124, "capset")
_S(6125, "rt_sigpending")
_S(6126, "rt_sigtimedwait")
_S(6127, "rt_sigqueueinfo")
_S(6128, "rt_sigsuspend")
_S(6129, "sigaltstack")
_S(6130, "utime")
_S(6131, "mknod")
_S(6132, "personality")
_S(6133, "ustat")
_S(6134, "statfs")
_S(6135, "fstatfs")
_S(6136, "sysfs")
_S(6137, "getpriority")
_S(6138, "setpriority")
_S(6139, "sched_setparam")
_S(6140, "sched_getparam")
_S(6141, "sched_setscheduler")
_S(6142, "sched_getscheduler")
_S(6143, "sched_get_priority_max")
_S(6144, "sched_get_priority_min")
_S(6145, "sched_rr_get_interval")
_S(6146, "mlock")
_S(6147, "munlock")
_S(6148, "mlockall")
_S(6149, "munlockall")
_S(6150, "vhangup")
_S(6151, "pivot_root")
_S(6152, "_sysctl")
_S(6153, "prctl")
_S(6154, "adjtimex")
_S(6155, "setrlimit")
_S(6156, "chroot")
_S(6157, "sync")
_S(6158, "acct")
_S(6159, "settimeofday")
_S(6160, "mount")
_S(6161, "umount2")
_S(6162, "swapon")
_S(6163, "swapoff")
_S(6164, "reboot")
_S(6165, "sethostname")
_S(6166, "setdomainname")
_S(6167, "create_module")
_S(6168, "init_module")
_S(6169, "delete_module")
_S(6170, "get_kernel_syms")
_S(6171, "query_module")
_S(6172, "quotactl")
_S(6173, "nfsservctl")
_S(6174, "getpmsg")
_S(6175, "putpmsg")
_S(6176, "afs_syscall")
_S(6177, "reserved177")
_S(6178, "gettid")
_S(6179, "readahead")
_S(6180, "setxattr")
_S(6181, "lsetxattr")
_S(6182, "fsetxattr")
_S(6183, "getxattr")
_S(6184, "lgetxattr")
_S(6185, "fgetxattr")
_S(6186, "listxattr")
_S(6187, "llistxattr")
_S(6188, "flistxattr")
_S(6189, "removexattr")
_S(6190, "lremovexattr")
_S(6191, "fremovexattr")
_S(6192, "tkill")
_S(6193, "reserved193")
_S(6194, "futex")
_S(6195, "sched_setaffinity")
_S(6196, "sched_getaffinity")
_S(6197, "cacheflush")
_S(6198, "cachectl")
_S(6199, "sysmips")
_S(6200, "io_setup")
_S(6201, "io_destroy")
_S(6202, "io_getevents")
_S(6203, "io_submit")
_S(6204, "io_cancel")
_S(6205, "exit_group")
_S(6206, "lookup_dcookie")
_S(6207, "epoll_create")
_S(6208, "epoll_ctl")
_S(6209, "epoll_wait")
_S(6210, "remap_file_pages")
_S(6211, "rt_sigreturn")
_S(6212, "fcntl64")
_S(6213, "set_tid_address")
_S(6214, "restart_syscall")
_S(6215, "semtimedop")
_S(6216, "fadvise64")
_S(6217, "statfs64")
_S(6218, "fstatfs64")
_S(6219, "sendfile64")
_S(6220, "timer_create")
_S(6221, "timer_settime")
_S(6222, "timer_gettime")
_S(6223, "timer_getoverrun")
_S(6224, "timer_delete")
_S(6225, "clock_settime")
_S(6226, "clock_gettime")
_S(6227, "clock_getres")
_S(6228, "clock_nanosleep")
_S(6229, "tgkill")
_S(6230, "utimes")
_S(6231, "mbind")
_S(6232, "get_mempolicy")
_S(6233, "set_mempolicy")
_S(6234, "mq_open")
_S(6235, "mq_unlink")
_S(6236, "mq_timedsend")
_S(6237, "mq_timedreceive")
_S(6238, "mq_notify")
_S(6239, "mq_getsetattr")
_S(6240, "vserver")
_S(6241, "waitid")
// _S(6242, "sys_setaltroot")
_S(6243, "add_key")
_S(6244, "request_key")
_S(6245, "keyctl")
_S(6246, "set_thread_area")
_S(6247, "inotify_init")
_S(6248, "inotify_add_watch")
_S(6249, "inotify_rm_watch")
_S(6250, "migrate_pages")
_S(6251, "openat")
_S(6252, "mkdirat")
_S(6253, "mknodat")
_S(6254, "fchownat")
_S(6255, "futimesat")
_S(6256, "newfstatat")
_S(6257, "unlinkat")
_S(6258, "renameat")
_S(6259, "linkat")
_S(6260, "symlinkat")
_S(6261, "readlinkat")
_S(6262, "fchmodat")
_S(6263, "faccessat")
_S(6264, "pselect6")
_S(6265, "ppoll")
_S(6266, "unshare")
_S(6267, "splice")
_S(6268, "sync_file_range")
_S(6269, "tee")
_S(6270, "vmsplice")
_S(6271, "move_pages")
_S(6272, "set_robust_list")
_S(6273, "get_robust_list")
_S(6274, "kexec_load")
_S(6275, "getcpu")
_S(6276, "epoll_pwait")
_S(6277, "ioprio_set")
_S(6278, "ioprio_get")
_S(6279, "utimensat")
_S(6280, "signalfd")
_S(6281, "timerfd")
_S(6282, "eventfd")
_S(6283, "fallocate")
_S(6284, "timerfd_create")
_S(6285, "timerfd_gettime")
_S(6286, "timerfd_settime")
_S(6287, "signalfd4")
_S(6288, "eventfd2")
_S(6289, "epoll_create1")
_S(6290, "dup3")
_S(6291, "pipe2")
_S(6292, "inotify_init1")
_S(6293, "preadv")
_S(6294, "pwritev")
_S(6295, "rt_tgsigqueueinfo")
_S(6296, "perf_event_open")
_S(6297, "accept4")
_S(6298, "recvmmsg")
_S(6299, "getdents64")
_S(6300, "fanotify_init")
_S(6301, "fanotify_mark")
_S(6302, "prlimit64")
_S(6303, "name_to_handle_at")
_S(6304, "open_by_handle_at")
_S(6305, "clock_adjtime")
_S(6306, "syncfs")
_S(6307, "sendmmsg")
_S(6308, "setns")
_S(6309, "process_vm_readv")
_S(6310, "process_vm_writev")
_S(6311, "kcmp")
_S(6312, "finit_module")
_S(6313, "sched_setattr")
_S(6314, "sched_getattr")
_S(6315, "renameat2")
_S(6316, "seccomp")
_S(6317, "getrandom")
_S(6318, "memfd_create")
_S(6321, "userfaultfd")
_S(6324, "copy_file_range")
